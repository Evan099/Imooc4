内部类的分类：4种

成员内部类
静态内部类
方法内部类
匿名内部类


成员内部类：
1、内部类在外部使用时，无法直接实例化，需要借助由外部类信息才能完成实例化
2、内部类的访问修饰符，可以任意，但是访问范围会受到影响
3、内部类可以直接访问外部类的成员，如果出现同名属性，优先访问内部类中定义的
4、可以使用外部类.this.成员的方式，访问外部类中同名的信息

静态内部类：
1、静态内部类中，只能直接访问外部类的静态成员，如果需要调用非静态成员，可以通过对象实例
2、静态内部类对象实例时，可以不依赖于外部类对象
3、可以通过外部类，内部类，静态的方式，访问内部类中的静态成员
4、当内部类属性与外部类属性同名时，默认直接调用内部类中的成员；
	如果需要访问外部类中的静态属性，则可以通过外部类.属性的方式；
	如果需要访问外部类中的非静态属性，则可以通过 new 外部类().属性的方式；
	
方法内部类：
1、方法内定义的局部变量只能在方法里使用
2、方法内不能定义静态成员
3、不能使用访问修饰符	
4、类中可以包含static ，final 修饰的成员

匿名内部类：（适用场景）
1、只用到类的一个实例
2、类在定义后马上用到
3、给类命名并不会导致代码更容易被理解

匿名内部类  特征：
1、匿名内部类没有类型名称、实例对象名称
2、编译后的文件名：外部类$数字.class
3、无法使用4种访问修饰符和abstract 、 static来修饰
4、无法编写构造方法，可以添加构造代码块
5、不能出现静态成员
6、可以实现接口也可以继承父类，但是不可兼得




